# yamllint disable rule:line-length
---
- hosts: all

  pre_tasks:
    - name: gather facts from excluded hosts
      ansible.builtin.setup:
      delegate_to: "{{ item }}"
      delegate_facts: true
      loop: "{{ groups['all'] }}"
      when: item not in ansible_play_hosts
      run_once: true
      tags:
        - always

- hosts: tombstone
  gather_facts: false

  pre_tasks:
    - name: set time zone
      ansible.builtin.file:
        path: /etc/localtime
        src: /usr/share/zoneinfo/{{ timezone }}
        state: link
      tags:
        - always

    - name: configure hosts file
      ansible.builtin.lineinfile:
        path: /etc/hosts
        regexp: "^127\\.0\\.1\\.1\t"
        line: "{{ lan_ipv4_address }}\ttombstone.{{ domain_name }}\ttombstone"

    - name: configure network interfaces
      ansible.builtin.template:
        src: network/interfaces.j2
        dest: /etc/network/interfaces
        owner: root
        group: root
        mode: 0444
      notify: restart networking

    - name: configure resolver
      ansible.builtin.copy:
        content: "{{ resolver_configuration }}"
        dest: /etc/resolv.conf
        owner: root
        group: root
        mode: 0444
      notify: restart networking

    - name: restart networking now
      ansible.builtin.meta: flush_handlers

  roles:
    - role: atlantis
      tags:
        - atlantis
    - role: bibliogram
      tags:
        - bibliogram
    - role: chrony
    - role: ddclient
    - role: homebridge
      tags:
        - homebridge
    - role: invidious
      tags:
        - invidious
    - role: locale
    - role: nano
    # - role: nftables
    - role: nitter
      tags:
        - nitter
    - role: nomad
      tags:
        - nomad
      when: false  # FIXME
    - role: opensmtpd
    - role: restic
    - role: rfkill
    - role: rimgo
      tags:
        - rimgo
    - role: samba
    - role: scribe
      tags:
        - scribe
    - role: sshd
    - role: step_ca
    - role: teddit
      tags:
        - teddit
    - role: traefik
      tags:
        - traefik
    - role: unbound
      tags:
        - unbound
    - role: unifi
      tags:
        - unifi
    - role: vpngateway
    - role: watchtower
    - role: wireguard

  tasks:
    - become: false
      ansible.builtin.file:
        path: "{{ playbook_dir }}/vpn"
        mode: 0700
        state: directory
      delegate_to: localhost

    - become: false
      ansible.builtin.template:
        src: vpn/client.mobileconfig.j2
        dest: "{{ playbook_dir }}/vpn/{{ item.name }}.mobileconfig"
        mode: 0400
        validate: plutil -lint %s
      loop: "{{ vpn_peers }}"
      loop_control:
        label: "{{ item.name }}"
      delegate_to: localhost

  handlers:
    - name: restart networking
      ansible.builtin.systemd:
        name: networking.service
        state: restarted

# - hosts: unifi
#
#   roles:
#     - role: unifi
#       when: false  # FIXME

- hosts: usg

  tasks:
    - name: install script to mangle TTL with iptables
      ansible.builtin.template:
        src: post-config.d/iptables_ttl_mangle.sh.j2
        dest: /config/scripts/post-config.d/iptables_ttl_mangle.sh
        owner: root
        group: vyattacfg
        mode: 0755
        validate: /bin/sh -n %s
      notify: iptables mangle ttl
      when: false  # FIXME

    - name: set allowed interfaces for avahi
      ansible.builtin.lineinfile:
        path: /etc/avahi/avahi-daemon.conf
        regexp: allow-interfaces=
        line: allow-interfaces={{ lan_if }},{{ iot_if }}
      notify: restart avahi-daemon
      when: false  # FIXME

    - name: set denied interfaces for avahi
      ansible.builtin.lineinfile:
        path: /etc/avahi/avahi-daemon.conf
        regexp: deny-interfaces=
        line: deny-interfaces={{ wan_if }}
      notify: restart avahi-daemon
      when: false  # FIXME

  handlers:
    - name: iptables mangle ttl
      ansible.builtin.command:
        argv:
          - /config/scripts/post-config.d/iptables_ttl_mangle.sh
      when: false  # FIXME

    - name: restart avahi-daemon
      ansible.builtin.service:
        name: avahi-daemon
        state: restarted
      when: false  # FIXME
