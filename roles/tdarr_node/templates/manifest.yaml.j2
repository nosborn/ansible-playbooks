---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: tdarr-node
  name: tdarr-node
  namespace: tdarr
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: tdarr-node
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: tdarr-node
    spec:
      containers:
        - # args:
          #   - -data=/config
          #   - -nobrowser
          env:
            - name: ffmpegVersion
              value: !!str 7
            - name: internalNode
              value: !!str false
            - name: inContainer
              value: !!str true
            - name: nodeName
              value: internal
            - name: serverIP
              value: 0.0.0.0
            - name: serverPort
              value: !!str 8266
            - name: webUIPort
              value: !!str 8265
            - name: PGID
              value: "{{ media_gid }}"
            - name: PUID
              value: "{{ media_uid }}"
            - name: TZ
              value: "{{ timezone }}"
          image: ghcr.io/haveagitgat/tdarr_node:latest
          imagePullPolicy: Always
          # livenessProbe:
          #   httpGet:
          #     path: /api/v2/status
          #     port: http-server
          name: tdarr-node
          ports:
            - containerPort: 8265
              name: http-ui
            - containerPort: 8266
              name: http
          # readinessProbe:
          #   httpGet:
          #     path: /api/v2/status
          #     port: http-server
          resources:
            limits:
              memory: 256Mi # TODO
          securityContext:
            allowPrivilegeEscalation: true # TODO: false
            capabilities:
              add:
                - CHOWN
                - SETGID
                - SETUID
              drop:
                - ALL
            readOnlyRootFilesystem: false # TODO: true
            # runAsGroup: !!int "{{ media_gid }}"
            runAsNonRoot: false # TODO: true
            # runAsUser: !!int "{{ media_uid }}"
          volumeMounts:
            - mountPath: /app/configs
              name: configs
            - mountPath: /data
              name: media
      securityContext:
        fsGroup: !!int "{{ media_gid }}"
        seccompProfile:
          type: RuntimeDefault
      volumes:
        - hostPath:
            path: /var/lib/tdarr/configs
            type: Directory
          name: configs
        - hostPath:
            path: /media/media
            type: Directory
          name: media
# ---
# apiVersion: networking.k8s.io/v1
# kind: NetworkPolicy
# metadata:
#   labels:
#     app.kubernetes.io/name: tdarr
#   name: tdarr
#   namespace: tdarr
# spec:
#   eggress:
#     - to:
#         - namespaceSelector:
#             matchLabels:
#               kubernetes.io/metadata.name: tdarr
#           podSelector: {}
#   ingress:
#     - from:
#         - namespaceSelector:
#             matchLabels:
#               kubernetes.io/metadata.name: kube-system
#           podSelector: {}
#         - namespaceSelector:
#             matchLabels:
#               kubernetes.io/metadata.name: tdarr
#           podSelector: {}
#   podSelector:
#     matchLabels:
#       app.kubernetes.io/name: tdarr
#   policyTypes:
#     - Egress
#     - Ingress
# ---
# apiVersion: v1
# kind: Service
# metadata:
#   labels:
#     app.kubernetes.io/component: server
#     app.kubernetes.io/name: tdarr
#   name: tdarr
#   namespace: tdarr
# spec:
#   ports:
#     - port: 8266
#       protocol: TCP
#       targetPort: http
#   selector:
#     app.kubernetes.io/name: tdarr
# ---
# apiVersion: v1
# kind: Service
# metadata:
#   labels:
#     app.kubernetes.io/component: web-ui
#     app.kubernetes.io/name: tdarr
#   name: tdarr-ui
#   namespace: tdarr
# spec:
#   ports:
#     - port: 8265
#       protocol: TCP
#       targetPort: http-ui
#   selector:
#     app.kubernetes.io/name: tdarr
