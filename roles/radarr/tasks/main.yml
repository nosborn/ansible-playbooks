# yamllint disable rule:line-length
---
- when: ansible_system_vendor == 'Synology'
  block:
    - ansible.builtin.file:
        path: "{{ media_path }}/{{ radarr_item }}"
        state: directory
      loop:
        - media/movies
        - torrents/complete/movies
        - usenet/complete/movies
      loop_control:
        loop_var: radarr_item

    - name: create radarr config volume
      community.docker.docker_volume:
        name: radarr-config

    - name: get radarr config volume info
      community.docker.docker_volume:
        name: radarr-config
      register: radarr_volume

    - name: set radarr volume permissions
      ansible.builtin.file:
        path: "{{ radarr_volume.volume.Mountpoint }}"
        owner: "{{ media_uid }}"
        group: "{{ media_gid }}"
        mode: !!str 0750
        state: directory

    - name: create radarr container
      community.docker.docker_container:
        cap_drop:
          - ALL
        command:
          - -data=/config
          - -nobrowser
        comparisons:
          "*": strict
        env:
          TZ: "{{ timezone }}"
        etc_hosts:
          host.docker.internal: host-gateway
        healthcheck:
          test:
            - CMD
            - /usr/bin/curl
            - -fsS
            - http://localhost:7878/ping
        image: ghcr.io/nosborn/radarr:latest
        labels:
          traefik.docker.network: media
          traefik.enable: !!str true
          traefik.http.routers.radarr.rule: Host(`radarr.{{ domain_name }}`)
          traefik.http.routers.radarr.observability.metrics: !!str true
          traefik.http.services.radarr.loadbalancer.server.port: !!str 7878
        mounts:
          - source: radarr-config
            target: /config
          - source: "{{ media_path }}"
            target: /data
            type: bind
        name: radarr
        networks:
          - name: media
        pull: always
        read_only: true
        restart_policy: unless-stopped
        security_opts:
          - no-new-privileges=true
        ulimits:
          - core:0:0
        user: "{{ media_uid }}:{{ media_gid }}"

    - name: configure radarr
      community.general.xml:
        path: "{{ radarr_volume.volume.Mountpoint }}/config.xml"
        xpath: /Config/{{ radarr_item.key }}
        value: "{{ radarr_item.value | string }}"
      loop: "{{ config | ansible.builtin.dict2items }}"
      loop_control:
        loop_var: radarr_item
      vars:
        config:
          AnalyticsEnabled: !!str False
          # AuthenticationRequired: DisabledForLocalAddresses
          LaunchBrowser: !!str False
          LogDbEnabled: !!str False
          LogLevel: info
          UpdateAutomatically: !!str False
      register: radarr_result

    - name: restart radarr container
      community.docker.docker_container:
        comparisons:
          "*": ignore
        name: radarr
        restart: "{{ radarr_result is changed }}"

    - name: remove radarr logs database
      ansible.builtin.file:
        path: "{{ radarr_volume.volume.Mountpoint }}/{{ radarr_item }}"
        state: absent
      loop:
        - logs.db
        - logs.db-shm
        - logs.db-wal
      loop_control:
        loop_var: radarr_item

    - ansible.builtin.include_role:
        name: media
        tasks_from: site.yml
      vars:
        media_name: radarr
