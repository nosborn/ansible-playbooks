# roles/pihole/tasks/main
---
- name: create persistent storage
  file:
    path: "{{ item }}"
    owner: root
    group: root
    mode: 0755
    state: directory
  loop:
    - /volume1/docker/{{ pihole_container_name }}/etc-dnsmasq.d
    - /volume1/docker/{{ pihole_container_name }}/etc-pihole

- template:
    src: "{{ item }}.j2"
    dest: /volume1/docker/{{ pihole_container_name }}/{{ item }}
    owner: root
    group: root
    mode: 0644
  loop:
    - etc-dnsmasq.d/mediastreamer.conf
    - etc-pihole/adlists.list
    - etc-pihole/blacklist.txt
    - etc-pihole/whitelist.txt
  notify: restart pihole

- name: create container
  docker_container:
    name: "{{ pihole_container_name }}"
    dns_servers:
      - 127.0.0.1
      - "{{ hostvars['usg']['lan_ipv4_address'] }}"
    etc_hosts:
      mediastreamer: "{{ mediastreamer_dns }}"
      unbound: "{{ unbound_ipv4_address }}"
    env:
      CONDITIONAL_FORWARDING: "True"
      CONDITIONAL_FORWARDING_DOMAIN: localdomain
      CONDITIONAL_FORWARDING_IP: "{{ hostvars['usg']['lan_ipv4_address'] }}"
      CONDITIONAL_FORWARDING_REVERSE: 1.168.192.in-addr.arpa
      DNS1: "{{ unbound_ipv4_address }}"
      DNS2: "no"
      TZ: "{{ timezone }}"
      WEBPASSWORD: "{{ pihole_admin_password }}"
    image: "{{ pihole_image_name }}"
    networks:
      - name: macvlan
        ipv4_address: "{{ pihole_ipv4_address }}"
    networks_cli_compatible: true
    restart_policy: unless-stopped
    volumes:
      - /volume1/docker/{{ pihole_container_name }}/etc-dnsmasq.d/:/etc/dnsmasq.d/
      - /volume1/docker/{{ pihole_container_name }}/etc-pihole/:/etc/pihole/
