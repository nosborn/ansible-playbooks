server {
  # listen {{ wan_ipv4|ipaddr('address') }}:80;
{% if wan_ipv6 is defined %}
  # listen {{ wan_ipv6|ipaddr('address')|ipwrap }}:80;
{% endif %}
  listen 80;
{% if site.aliases is defined %}
  server_name {{ site.name }} {{ site.aliases|sort|join(' ') }};
{% else %}
  server_name {{ site.name }};
{% endif %}

  gzip off;

  add_header Content-Security-Policy "default-src 'none'" always;
  add_header Referrer-Policy strict-origin-when-cross-origin always;
  add_header X-Content-Type-Options nosniff always;
  add_header X-Frame-Options SAMEORIGIN always;
  add_header X-XSS-Protection '1; mode=block' always;

  location ^~ /.well-known/acme-challenge/ {
    alias /acme/;
    allow all;
  }

  return 301 https://$server_name$request_uri;
}

server {
  # listen {{ wan_ipv4|ipaddr('address') }}:443 ssl http2;
{% if wan_ipv6 is defined %}
  # listen {{ wan_ipv6|ipaddr('address')|ipwrap }}:443 ssl http2;
{% endif %}
  listen 443 ssl http2;
{% if site.aliases is defined %}
  server_name {{ site.name }} {{ site.aliases|sort|join(' ') }};
{% else %}
  server_name {{ site.name }};
{% endif %}

  ssl_certificate /etc/ssl/{{ site.name }}.fullchain.pem;
  ssl_certificate_key /etc/ssl/private/{{ site.name }}.key;
  # Modern:
  #ssl_ciphers 'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256';
  # Intermediate:
  ssl_ciphers 'ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA:ECDHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA:ECDHE-ECDSA-DES-CBC3-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:DES-CBC3-SHA:!DSS';
  ssl_dhparam /etc/ssl/ffdhe2048.pem;
  ssl_prefer_server_ciphers on;
  ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
  ssl_session_cache shared:SSL:50m;
  ssl_session_tickets off;
  ssl_session_timeout 1d;
  ssl_stapling on;
  ssl_stapling_verify on;
  ssl_trusted_certificate /etc/ssl/{{ site.name }}.chain.pem;

  add_header Content-Security-Policy "{{ site.csp|default("default-src 'self';") }}" always;
  add_header Expect-CT 'max-age=0; report-uri="{{ report_uri }}/r/default/ct/reportOnly"' always;
  add_header Referrer-Policy strict-origin-when-cross-origin always;
  add_header Strict-Transport-Security 'max-age=15768000; includeSubdomains' always;
  add_header X-Content-Type-Options nosniff always;
  add_header X-Frame-Options SAMEORIGIN always;
  add_header X-XSS-Protection '1; mode=block' always;

{% if site.redirect is defined %}
  return 301 {{ site.redirect }};
{% else %}
  root /var/www/sites/{{ site.name }}/current;

  location ^~ /.well-known/acme-challenge/ {
    alias /acme/;
    allow all;
  }

  location ~ ^/apple-touch-icon(?:-\d+x\d+)?(?:-precomposed)?\.png$ {
    log_not_found off;
  }

  location = /favicon.ico {
    log_not_found off;
  }
{%   if site.locations is defined %}
{%     for location in site.locations %}

  location {{ location.uri }} {
{%       if location.access is defined %}
{%         for access in location.access %}
    {{ access }};
{%         endfor %}
{%       endif %}
{%       if location.auth_basic is defined %}
    auth_basic "{{ location.auth_basic }}";
{%       endif %}
{%       if location.auth_basic_user_file is defined %}
    auth_basic_user_file {{ location.auth_basic_user_file }};
{%       endif %}
{%       if location.autoindex is defined %}
    autoindex {{ location.autoindex }};
    autoindex_exact_size off;
{%       endif %}
{%       if location.fastcgi_pass is defined %}
    fastcgi_pass {{ location.fastcgi_pass }};
{%         if location.fastcgi_split_path_info is defined %}
    fastcgi_split_path_info {{ location.fastcgi_split_path_info }};
{%         endif %}
{%         if location.fastcgi_params is defined %}
{%           for parameter, value in location.fastcgi_params.iteritems() %}
    fastcgi_param {{ parameter }} {{ value }};
{%           endfor %}
{%         endif %}
    include fastcgi_params;
{%       endif %}
{%       if location.headers is defined %}
{%         for header in location.headers %}
    add_header {{ header }};
{%         endfor %}
{%       endif %}
{%       if location.proxy_pass is defined %}
    proxy_pass {{ location.proxy_pass }};
{%         if location.proxy_set_header is defined %}
{%           for header in location.proxy_set_header %}
    proxy_set_header {{ header }};
{%           endfor %}
{%         endif %}
{%       endif %}
{%       if location.root is defined %}
    root {{ location.root }};
{%       endif %}
  }
{%     endfor %}
{%   endif %}
{% endif %}
}
