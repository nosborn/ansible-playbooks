---
- when:
    - ansible_system_vendor == 'Synology'
  block:
    - ansible.builtin.command:
        argv:
          - /usr/syno/bin/synopkg
          - list
          - --name
      register: emby_result
      changed_when: false

    - name: install packages
      ansible.builtin.command:
        argv:
          - /usr/syno/bin/synopkg
          - install_from_server
          - EmbyServer
      when: "'EmbyServer' not in emby_result.stdout_lines"

    # - name: create share
    #   ansible.builtin.command:
    #     argv:
    #       - /usr/syno/sbin/synoshare
    #       - --add
    #       - Media
    #       - "" # desc
    #       - "{{ media_path }}"
    #       - "" # na
    #       - "" # rw
    #       - "" # ro
    #       - 1 # browseable
    #       - 0 # adv_privilege
    #     creates: "{{ media_path }}"

    - name: publish site
      ansible.builtin.include_role:
        name: nginx
        tasks_from: site.yml
      vars:
        nginx_server_name: emby.{{ domain_name }}
        nginx_src: emby-redirect.conf.j2
        nginx_dest: emby-redirect.conf

    - name: publish DNS
      delegate_to: tombstone
      ansible.builtin.import_role:
        name: unbound
        tasks_from: fragment.yml
      vars:
        unbound_content: |
          server:
            local-data: "emby.{{ domain_name }}. A {{ ansible_default_ipv4.address }}"
        unbound_dest: local-data-emby.conf
