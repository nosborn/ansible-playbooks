# set alert your-name@your.domain not on { instance, action }
set daemon 30
  with start delay 60
set httpd port 2812
  address localhost
  allow admin:monit read-only
set idfile /var/monit/id
set log syslog
set pidfile /var/run/monit.pid
#set mail-format { from: monit@foo.bar }
#set mailserver
set statefile /var/monit/state

check process elasticsearch with pidfile /var/run/elasticsearch/elasticsearch.pid
  start program = "/usr/sbin/rcctl start elasticsearch"
  stop program = "/usr/sbin/rcctl stop elasticsearch"
  if failed port 9200 ipv4 protocol http request "/_cat/health"
    for 5 cycles
    then alert

check process filebeat matching '^/usr/local/bin/filebeat .+$'
  start program = "/usr/sbin/rcctl start filebeat"
  stop program = "/usr/sbin/rcctl stop filebeat"
  if failed port {{ heartbeat_http_port }} ipv4 protocol http
    for 5 cycles
    then alert
  depends on elasticsearch

check process heartbeat matching '^/usr/local/bin/heartbeat .+$'
  start program = "/usr/sbin/rcctl start heartbeat"
  stop program = "/usr/sbin/rcctl stop heartbeat"
  if failed port {{ filebeat_http_port }} ipv4 protocol http
    for 5 cycles
    then alert
  depends on elasticsearch

check process homebridge matching '^node: homebridge$'
  start program = "/usr/sbin/rcctl start homebridge"
  stop program = "/usr/sbin/rcctl stop homebridge"

check process kibana matching '^/usr/local/bin/node /usr/local/kibana/bin/\.\./src/cli( .+)?$'
  start program = "/usr/sbin/rcctl start kibana"
  stop program = "/usr/sbin/rcctl stop kibana"
  if failed port 5601 ipv4 protocol http request "/api/status"
    for 5 cycles
    then alert
  depends on elasticsearch

check process ntpd with matching '^/usr/sbin/ntpd$'
  start program = "/usr/sbin/rcctl start ntpd"
  stop program = "/usr/sbin/rcctl stop ntpd"
  if failed port 123 ipv4 protocol ntp3
    for 5 cycles
    then alert

check process sshd with pidfile /var/run/sshd.pid
  start program = "/usr/sbin/rcctl start sshd"
  stop program = "/usr/sbin/rcctl stop sshd"

check process syslogd with pidfile /var/run/syslog.pid
  start program = "/usr/sbin/rcctl start syslogd"
  stop program = "/usr/sbin/rcctl stop syslogd"

check process tor matching '^/usr/local/bin/tor$'
  start program = "/usr/sbin/rcctl start tor"
  stop program = "/usr/sbin/rcctl stop tor"
  # if failed port 9053 ipv4 type udp protocol dns
  #   for 5 cycles
  #   then alert

check process unbound with pidfile /var/run/unbound.pid
  start program = "/usr/sbin/rcctl start unbound"
  stop program = "/usr/sbin/rcctl stop unbound"
  if failed host {{ lan_ipv4_address }} port 53 ipv4 type udp protocol dns
    then alert
