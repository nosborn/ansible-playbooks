---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: overseerr
  name: overseerr
  namespace: media
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: overseerr
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: overseerr
    spec:
      containers:
        - env:
            - name: LOG_LEVEL
              value: info
            - name: TZ
              value: "{{ timezone }}"
          image: sctx/overseerr:latest
          imagePullPolicy: Always
          # livenessProbe:
          #   httpGet:
          #     path: /login
          #     port: http
          name: overseerr
          ports:
            - containerPort: 5055
              name: http
          # readinessProbe:
          #   httpGet:
          #     path: /login
          #     port: http
          resources:
            limits:
              memory: 256Mi # TODO
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            readOnlyRootFilesystem: false # FIXME: true
            runAsGroup: !!int "{{ media_gid }}"
            runAsNonRoot: true
            runAsUser: !!int "{{ media_uid }}"
          volumeMounts:
            # - mountPath: /cache/.yarn
            #   name: yarn-cache
            # - mountPath: /.yarn
            #   name: yarn
            - mountPath: /app/config
              name: config
            # - mountPath: /data
            #   name: media
            #   readOnly: true
      securityContext:
        fsGroup: !!int "{{ media_gid }}"
        seccompProfile:
          type: RuntimeDefault
      volumes:
        - hostPath:
            path: /var/lib/overseerr
            type: Directory
          name: config
        # - hostPath:
        #     path: /media/media
        #     type: Directory
        #   name: media
        # - emptyDir:
        #     medium: Memory
        #   name: yarn
        # - emptyDir:
        #     medium: Memory
        #   name: yarn-cache
---
apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  labels:
    app.kubernetes.io/name: overseerr
  name: overseerr
  namespace: media
spec:
  entryPoints:
    - web
  routes:
    - kind: Rule
      match: Host(`overseerr.{{ domain_name }}`)
      services:
        - name: overseerr
          namespace: media
          port: 5055
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/name: overseerr
  name: overseerr
  namespace: media
spec:
  ports:
    - port: 5055
      protocol: TCP
      targetPort: http
  selector:
    app.kubernetes.io/name: overseerr
