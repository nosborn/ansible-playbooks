# yamllint disable rule:line-length
---
- name: create site directory
  ansible.builtin.file:
    path: /srv/unifi/data/sites/default
    owner: unifi
    group: unifi
    mode: 0750
    state: directory

- name: install gateway configuration
  ansible.builtin.template:
    src: config.gateway.json.j2
    dest: /srv/unifi/data/sites/default/config.gateway.json
    owner: unifi
    group: unifi
    mode: 0440
    validate: "{{ jsonlint_validation_command }}"

- name: install dependencies
  ansible.builtin.apt:
    name:
      - python-cryptography
      - python-openssl
    install_recommends: false
    state: present
  when: ansible_python.version.major == 2

- name: install dependencies
  ansible.builtin.apt:
    name:
      - python3-cryptography
      - python3-openssl
    install_recommends: false
    state: present
  when: ansible_python.version.major == 3

- name: generate SSL private key
  community.crypto.openssl_privatekey:
    path: /data/unifi-core/config/unifi-core.key
    owner: root
    group: root
    mode: 0440
    state: present
  notify: restart unifi-core

- name: generate SSL CSR
  community.crypto.openssl_csr:
    privatekey_path: /data/unifi-core/config/unifi-core.key
    common_name: unifi.{{ global_domain }}
    path: /etc/ssl/private/cloudkey.csr
    owner: root
    group: root
    mode: 0440
    state: present

- name: generate SSL certificate (part 1)
  community.crypto.acme_certificate:
    account_key_content: "{{ letsencrypt_account_key }}"
    acme_directory: "{{ letsencrypt_acme_directory }}"
    acme_version: "{{ letsencrypt_acme_version }}"
    challenge: dns-01
    csr: /etc/ssl/private/cloudkey.csr
    fullchain_dest: /data/unifi-core/config/unifi-core.crt
    modify_account: false
    remaining_days: 30
  register: letsencrypt_challenge

- ansible.builtin.debug:  # noqa 502
    var: letsencrypt_challenge
    verbosity: 1

- community.general.cloudflare_dns:
    account_api_token: "{{ cloudflare_account_api_token }}"
    account_email: "{{ cloudflare_account_email }}"
    record: "{{ letsencrypt_challenge.challenge_data['unifi.'~global_domain]['dns-01']['resource'] }}.unifi"
    solo: true
    type: TXT
    value: "{{ letsencrypt_challenge.challenge_data['unifi.'~global_domain]['dns-01']['resource_value'] }}"
    zone: "{{ global_domain }}"
  when: letsencrypt_challenge.changed  # noqa 503
  delegate_to: localhost

- name: generate SSL certificate (part 2)
  community.crypto.acme_certificate:
    account_key_content: "{{ letsencrypt_account_key }}"
    acme_directory: "{{ letsencrypt_acme_directory }}"
    acme_version: "{{ letsencrypt_acme_version }}"
    account_uri: "{{ letsencrypt_challenge.account_uri }}"
    challenge: dns-01
    csr: /etc/ssl/private/cloudkey.csr
    data: "{{ letsencrypt_challenge }}"
    fullchain_dest: /data/unifi-core/config/unifi-core.crt
    modify_account: false
    remaining_days: 30
  when: letsencrypt_challenge.changed  # noqa 503

- community.crypto.openssl_pkcs12:
    path: /etc/ssl/private/cloudkey.p12
    friendly_name: unifi
    passphrase: "{{ unifi_jks_password }}"
    certificate_path: /data/unifi-core/config/unifi-core.crt
    privatekey_path: /data/unifi-core/config/unifi-core.key
    owner: root
    group: root
    mode: 0400
    backup: true

- ansible.builtin.java_cert:
    cert_alias: unifi
    keystore_pass: "{{ unifi_jks_password }}"
    keystore_path: /etc/ssl/private/unifi.keystore.jks
    keystore_type: JKS
    pkcs12_alias: unifi
    pkcs12_path: /etc/ssl/private/cloudkey.p12
  notify: restart unifi

- ansible.builtin.slurp:  # noqa 502
    src: /data/unifi-core/config/unifi-core.crt
  register: unifi_certificate

- ansible.builtin.slurp:  # noqa 502
    src: /data/unifi-core/config/unifi-core.key
  register: unifi_private_key

- ansible.builtin.java_keystore:
    name: unifi
    certificate: "{{ unifi_certificate['content'] | b64decode }}"
    private_key: "{{ unifi_private_key['content'] | b64decode }}"
    password: "{{ unifi_jks_password }}"
    dest: /etc/ssl/private/unifi.keystore.jks
    owner: root
    group: ssl-cert
    mode: 0440
  notify: restart unifi

- ansible.builtin.stat:
    path: /etc/ssl/private/unifi.keystore.jks
    checksum_algorithm: md5
    get_attributes: false
    get_mime: false
  register: unifi_keystore

- ansible.builtin.copy:
    content: "{{ unifi_keystore.stat.checksum }} */etc/ssl/private/unifi.keystore.jks\n"
    dest: /etc/ssl/private/unifi.keystore.jks.md5
    owner: root
    group: root
    mode: 0444

- ansible.builtin.fetch:
    dest: backup
    src: "{{ item }}"
  loop:
    - /data/unifi-core/config/unifi-core.crt
    - /data/unifi-core/config/unifi-core.key
    - /etc/ssl/private/cloudkey.csr
    - /etc/ssl/private/cloudkey.p12
    - /etc/ssl/private/unifi.keystore.jks
    - /etc/ssl/private/unifi.keystore.jks.md5
