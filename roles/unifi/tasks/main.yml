# yamllint disable rule:line-length
---
- ansible.builtin.fetch: # noqa 502
    dest: /etc/ssl/private/cloudkey.p12
    src: "{{ ownca_private_path }}/cloudkey.p12" # FIXME
    flat: true
    fail_on_missing: false
    mode: 0400
  when: false # FIXME

- become: false
  delegate_to: localhost
  community.crypto.openssl_pkcs12: # noqa 502
    path: "{{ ownca_private_path }}/cloudkey.p12" # FIXME
    friendly_name: unifi
    passphrase: "{{ unifi_jks_password }}"
    certificate_path: "{{ ownca_path }}/unifi.{{ domain_name }}.crt" # FIXME
    privatekey_path: "{{ ownca_private_path }}/unifi.{{ domain_name }}.key" # FIXME
    owner: root
    group: root
    mode: 0400
  when: false # FIXME

- ansible.builtin.copy: # noqa 502
    src: "{{ ownca_private_path }}/cloudkey.p12" # FIXME
    dest: /etc/ssl/private/cloudkey.p12
    owner: root
    group: root
    mode: 0400
  notify: restart unifi
  when: false # FIXME

- community.general.java_cert: # noqa 502
    cert_alias: unifi
    keystore_pass: "{{ unifi_jks_password }}"
    keystore_path: /etc/ssl/private/unifi.keystore.jks
    keystore_type: JKS
    pkcs12_alias: unifi
    pkcs12_password: "{{ unifi_jks_password }}"
    pkcs12_path: /etc/ssl/private/cloudkey.p12
  notify: restart unifi
  when: false # FIXME

- name: read the certificate
  ansible.builtin.slurp: # noqa 502
    src: "{{ unifi_core_certificate_path }}"
  register: unifi_certificate
  when: false # FIXME

- name: read the private key
  ansible.builtin.slurp: # noqa 502
    src: "{{ unifi_core_privatekey_path }}"
  register: unifi_privatekey
  when: false # FIXME

- name: populate the keystore
  ansible.builtin.java_keystore:
    name: unifi
    certificate: "{{ unifi_certificate.content | b64decode }}"
    private_key: "{{ unifi_privatekey.content | b64decode }}"
    password: "{{ unifi_jks_password }}"
    dest: "{{ unifi_keystore_path }}"
    owner: root
    group: ssl-cert
    mode: 0440
  notify: restart unifi
  when: false # FIXME

- ansible.builtin.stat: # noqa 502
    path: "{{ unifi_keystore_path }}"
    checksum_algorithm: md5
    get_attributes: false
    get_mime: false
  register: unifi_keystore
  when: false # FIXME

- name: save the keystore checksum
  ansible.builtin.copy:
    content: "{{ unifi_keystore.stat.checksum }} *{{ unifi_keystore_path }}\n"
    dest: "{{ unifi_keystore_path }}.md5"
    owner: root
    group: root
    mode: 0444
  when: false # FIXME

- name: create site directory
  ansible.builtin.file:
    path: "{{ unifi_dir }}/data/sites/default"
    owner: unifi
    group: unifi
    mode: 0750
    state: directory

- name: install gateway configuration
  ansible.builtin.template:
    src: config.gateway.json.j2
    dest: "{{ unifi_dir }}/data/sites/default/config.gateway.json"
    owner: unifi
    group: unifi
    mode: 0444
  notify: force provision gateway
