# yamllint disable rule:line-length
---
- name: install dependencies
  ansible.builtin.apt:
    name:
      - sqlite3
    state: present

- ansible.builtin.uri:
    url: https://api.github.com/repos/Sonarr/Sonarr/releases/latest
    headers:
      Accept: application/vnd.github+json
    return_content: true
    body_format: json
  register: sonarr_result

- name: set version fact
  ansible.builtin.set_fact:
    sonarr_version: "{{ sonarr_result.json.tag_name | ansible.builtin.regex_replace('^v', '') }}"

- ansible.builtin.file:
    path: /opt/sonarr/{{ sonarr_version }}
    owner: root
    group: root
    mode: !!str 0755
    state: directory

- ansible.builtin.unarchive:
    src: "{{ sonarr_result.json.assets | selectattr('name', 'search', '.linux-x64.tar.gz') | map(attribute='browser_download_url') | first }}"
    remote_src: true
    dest: /opt/sonarr/{{ sonarr_version }}
    owner: root
    group: root
    extra_opts:
      - --strip-components=1
    creates: /opt/sonarr/{{ sonarr_version }}/Sonarr
  notify: restart sonarr

- name: create group
  ansible.builtin.group:
    name: sonarr
    system: true

- name: create user
  ansible.builtin.user:
    comment: Sonarr Daemon
    createhome: false
    group: sonarr
    groups:
      - "{{ media_group }}"
    home: "{{ sonarr_home }}" # created by systemd
    name: sonarr
    password_lock: true
    shell: "{{ nologin_shell }}"
    system: true

- name: create service
  ansible.builtin.template:
    src: sonarr.service.j2
    dest: /etc/systemd/system/sonarr.service
    owner: root
    group: root
    mode: !!str 0444
    validate: systemd-analyze verify %s
  notify: restart sonarr

- name: enable and start service
  ansible.builtin.systemd_service:
    name: sonarr.service
    daemon_reload: true
    enabled: true
    state: started

- ansible.builtin.wait_for:
    path: "{{ sonarr_home }}/config.xml"

- name: configure
  community.general.xml:
    path: "{{ sonarr_home }}/config.xml"
    xpath: /Config/{{ item.key }}
    value: "{{ item.value | string }}"
  loop: "{{ config | ansible.builtin.dict2items }}"
  vars:
    config:
      AnalyticsEnabled: !!str False
      ApiKey: "{{ sonarr_api_key }}"
      AuthenticationRequired: DisabledForLocalAddresses
      BindAddress: "*"
      LaunchBrowser: !!str False
      LogLevel: info
      UpdateAutomatically: !!str False
  notify: restart sonarr
