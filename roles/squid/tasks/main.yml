# roles/squid/tasks/main
---
- name: install packages
  package:
    name:
      - py3-openssl
      - squid--
    state: present
  register: squid_package_result
  until: squid_package_result is succeeded

- name: generate CA private key
  openssl_privatekey:
    path: /etc/squid/CA.key
    owner: root
    group: _squid
    mode: 0440
  notify: restart squid

- name: generate CA CSR
  openssl_csr:
    common_name: Squid sslBump CA
    basic_constraints:
      - "CA:TRUE"
    key_usage:
      - cRLSign
      - keyCertSign
    path: /etc/squid/CA.csr
    privatekey_path: /etc/squid/CA.key
    owner: root
    group: wheel
    mode: 0400

- name: generate CA certificate
  openssl_certificate:
    path: /etc/squid/CA.crt
    privatekey_path: /etc/squid/CA.key
    csr_path: /etc/squid/CA.csr
    provider: selfsigned
    owner: root
    group: _squid
    mode: 0440
  notify: restart squid

- name: install URL rewrite script
  copy:
    src: url_rewrite.py
    dest: "{{ squid_url_rewrite_program }}"
    owner: root
    group: bin
    mode: 0555
    validate: python3 -mpy_compile %s
  notify: restart squid

- name: install configuration file
  template:
    src: squid.conf.j2
    dest: /etc/squid/squid.conf
    owner: root
    group: wheel
    mode: 0444
    validate: /usr/local/sbin/squid -f %s -k parse
  notify: restart squid

- name: start service
  service:
    name: squid
    enabled: true
    state: started

- name: fetch CA certificate
  slurp:
    src: /etc/squid/CA.crt
  register: squid_ca_certificate

- name: publish CA mobileconfig
  template:
    src: sslBump.mobileconfig.j2
    dest: /var/www/htdocs/sslBump.mobileconfig
    owner: root
    group: wheel
    mode: 0444
    validate: "{{ xmllint_validation_command }}"
