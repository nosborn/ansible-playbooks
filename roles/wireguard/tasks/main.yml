# yamllint disable rule:line-length
---
- name: install packages
  ansible.builtin.package:
    name:
      - wireguard-tools
      - wireguard-tools-doc
    state: present
  register: wireguard_result
  until: wireguard_result is not failed

- name: create directory
  ansible.builtin.file:
    path: /etc/wireguard
    owner: root
    group: root
    mode: !!str 0755
    state: directory

- name: configure
  ansible.builtin.template:
    src: interface.conf.j2
    dest: /etc/wireguard/{{ wireguard_if }}.conf
    owner: root
    group: root
    mode: !!str 0400
  # notify: restart wireguard -- FIXME: restart interface

- name: stop and disable service
  ansible.builtin.service:
    name: wg-quick.{{ wireguard_if }}
    enabled: false
    state: stopped

- name: unlink service
  ansible.builtin.file:
    path: /etc/init.d/wg-quick.{{ wireguard_if }}
    state: absent

- name: load kernel module
  ansible.builtin.copy:
    content: |
      wireguard
    dest: /etc/modules-load.d/wireguard.conf
    owner: root
    group: root
    mode: !!str 0444

- name: load kernel module
  community.general.modprobe:
    name: wireguard
    state: present

- name: enable IP forwarding
  ansible.posix.sysctl:
    name: net.ipv4.ip_forward
    value: !!str 1
    sysctl_set: true
    reload: true

- name: configure static routes
  ansible.builtin.lineinfile:
    path: /etc/conf.d/staticroute
    line: staticiproute="{{ hostvars.tombstone.lan_ipv4_subnet }} via {{ wireguard_ipv4_address }}"
    regex: ^#?staticiproute=
    owner: root
    group: root
    mode: !!str 0444
    validate: sh -n %s
  notify: restart staticroute
#
# - name: configure clients
#   delegate_to: localhost
#   ansible.builtin.template:
#     src: client.conf.j2
#     dest: "{{ playbook_dir }}/wg-{{ wireguard_item.name }}.conf"
#     mode: !!str 0400
#   loop: "{{ vault_wireguard_peers }}"
#   loop_control:
#     loop_var: wireguard_item
