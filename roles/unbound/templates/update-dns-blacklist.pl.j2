#!/usr/bin/perl -w

use strict;
use warnings;
use 5.010;

use Digest::SHA1 qw(sha1_hex);
use File::Copy;
use HTTP::Tiny;

use constant CONFFILE => '{{ unbound_confdir }}/blacklist.conf';
use constant LISTS => qw(
  http://sysctl.org/cameleon/hosts
  https://gitlab.com/quidsup/notrack-blocklists/raw/master/notrack-blocklist.txt
  https://gitlab.com/quidsup/notrack-blocklists/raw/master/notrack-malware.txt
  https://hosts-file.net/ad_servers.txt
  https://mirror1.malwaredomains.com/files/justdomains
  https://raw.githubusercontent.com/StevenBlack/hosts/master/hosts
  https://s3.amazonaws.com/lists.disconnect.me/simple_ad.txt
  https://s3.amazonaws.com/lists.disconnect.me/simple_tracking.txt
  https://zerodot1.gitlab.io/CoinBlockerLists/hosts_browser
  https://zeustracker.abuse.ch/blocklist.php?download=domainblocklist
);

my %names = (
  "com\tbrandmetrics"                    => 1,
  "com\tfacebook\tgraph"                 => 1,
  "com\tgoogle\tl\tgstaticadssl"         => 1,
  "com\ticloud\tmetrics"                 => 1,
  "com\tmicrosoft\tipv6\twin10"          => 1,
  "com\tmicrosoft\tipv6\twin1710"        => 1,
  "com\tnvidia\tgfe\tevents"             => 1,
  "com\treddit\te"                       => 1,
  "com\troku\tcaptive"                   => 1,
  "com\troku\tcto\ttis"                  => 1,
  "com\tsnapchat\app-analytics"          => 1,
  "com\tximad\tadserver"                 => 1,
  "com\tximad\tmjp-analytics"            => 1,
  "com\tximad\tmpuzzlesanalytics"        => 1,
  "com\tubnt\tunifi-report"              => 1,
  "la\tsoom\tteleport"                   => 1,
  "media\tnui"                           => 1,
  "net\tapple-dns\tfe\tmetrics"          => 1,
  "net\tbattle\ttelemetry-in"            => 1,
  "uk\tco\tbbci\tfiles\tmybbc-analytics" => 1,
);
my $verbose = 0;

if (! -e '/var/cache/dns-blacklist') {
  mkdir '/var/cache/dns-blacklist' or die;
}
chdir '/var/cache/dns-blacklist' or die;

my $ht = HTTP::Tiny->new;

foreach my $url (LISTS) {
  my $file = sha1_hex($url);
  say "Start $url ($file)" if $verbose;

  my $response = $ht->mirror($url, $file);
  if ($response->{success}) {
    open(my $fh, '<', $file) or die;

    LINE: while (my $line = <$fh>) {
      chomp $line;
      $line =~ s/#.*$//;
      $line =~ s/\s+$//;
      next unless $line;

      my @fields = split /\s+/, $line;

      if (scalar @fields == 2) {
        next if $fields[0] eq '255.255.255.255';
        shift @fields if ($fields[0] =~ /^(0|0\.0\.0\.0|127\.0\.0\.1|::|::1)$/);
        next if ($fields[0] =~ /^(0|0\.0\.0\.0|127\.0\.0\.1|::|::1)$/); # StevenBlack
      }
      unless (scalar @fields == 1) {
        say "Ignoring: $line" if $verbose;
        next;
      }

      my $name = lc($fields[0]);
      $name =~ s/\.+$//;
      if (length($name) > 253) {
        say "Ignoring: $name" if $verbose;
        next;
      }
      my @labels = split /\./, $name;
      if (scalar(@labels) < 2) {
        say "Ignoring: $name" if $verbose;
        next;
      }
      if (grep { length() < 1 or length() > 63 or /[^-a-zA-Z0-9_]/ or /^-/ or /-$/ } @labels) {
        say "Ignoring: $name" if $verbose;
        next;
      }
      my $rname = join("\t", reverse @labels);

      $names{$rname}++;
    }
  } else {
    say "$url";
    say "Failed: $response->{status} $response->{reasons}";
  }
}

open(my $out, '>', CONFFILE.'.next') or die;
print $out "server:\n";
my $prefix = "\t";
foreach my $rname (sort(keys %names)) {
  next if rindex($rname, $prefix, 0) == 0;
  my $name = join('.', reverse split("\t", $rname));
  print $out "\tlocal-zone: \"$name.\" redirect\n";
  print $out "\tlocal-data: \"$name. A 0.0.0.0\"\n";
  print $out "\tlocal-data: \"$name. AAAA ::\"\n";
  $prefix = "${rname}\t";
}
close($out);

if (-e CONFFILE) {
  copy(CONFFILE, CONFFILE.'.prev') or die;
}
move(CONFFILE.'.next', CONFFILE) or die;
exec('/bin/ksh', '-c', 'rcctl get {{ unbound_service_name }} status && rcctl reload {{ unbound_service_name }}') or die;
