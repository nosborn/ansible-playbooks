# yamllint disable rule:line-length
---
- when: ansible_system_vendor == 'Synology'
  block:
    - name: create prowlarr config volume
      community.docker.docker_volume:
        name: prowlarr-config

    - name: get prowlarr config volume info
      community.docker.docker_volume:
        name: prowlarr-config
      register: prowlarr_volume

    - name: set prowlarr volume permissions
      ansible.builtin.file:
        path: "{{ prowlarr_volume.volume.Mountpoint }}"
        owner: "{{ media_uid }}"
        group: "{{ media_gid }}"
        mode: !!str 0750
        state: directory

    - name: create prowlarr container
      community.docker.docker_container:
        cap_drop:
          - ALL
        command:
          - -data=/config
          - -nobrowser
        comparisons:
          "*": strict
        env:
          TZ: "{{ timezone }}"
        healthcheck:
          test:
            - CMD
            - /usr/bin/curl
            - -fsS
            - http://localhost:9696/ping
        image: ghcr.io/nosborn/prowlarr:latest
        labels:
          traefik.docker.network: media
          traefik.enable: !!str true
          traefik.http.routers.prowlarr.rule: Host(`prowlarr.{{ domain_name }}`)
          traefik.http.routers.prowlarr.observability.metrics: !!str true
          traefik.http.services.prowlarr.loadbalancer.server.port: !!str 9696
        mounts:
          - source: prowlarr-config
            target: /config
        name: prowlarr
        networks:
          - name: media
        pull: always
        read_only: true
        restart_policy: unless-stopped
        security_opts:
          - no-new-privileges=true
        ulimits:
          - core:0:0
        user: "{{ media_uid }}:{{ media_gid }}"

    - name: configure prowlarr
      community.general.xml:
        path: "{{ prowlarr_volume.volume.Mountpoint }}/config.xml"
        xpath: /Config/{{ prowlarr_item.key }}
        value: "{{ prowlarr_item.value | string }}"
      loop: "{{ config | ansible.builtin.dict2items }}"
      loop_control:
        loop_var: prowlarr_item
      vars:
        config:
          AnalyticsEnabled: !!str False
          # AuthenticationRequired: DisabledForLocalAddresses
          LaunchBrowser: !!str False
          LogDbEnabled: !!str False
          LogLevel: info
          UpdateAutomatically: !!str False
      register: prowlarr_result

    - name: restart prowlarr container
      community.docker.docker_container:
        comparisons:
          "*": ignore
        name: prowlarr
        restart: "{{ prowlarr_result is changed }}"

    - name: remove prowlarr logs database
      ansible.builtin.file:
        path: "{{ prowlarr_volume.volume.Mountpoint }}/{{ prowlarr_item }}"
        state: absent
      loop:
        - logs.db
        - logs.db-shm
        - logs.db-wal
      loop_control:
        loop_var: prowlarr_item

    - ansible.builtin.include_role:
        name: media
        tasks_from: site.yml
      vars:
        media_name: prowlarr
