logging {
	level = "warn"
}

loki.source.file "main" {
	forward_to = [
		loki.process.file.receiver,
	]

	targets = [
		{"__path__" = "/var/log/nginx/access.log"},
		{"__path__" = "/var/log/nginx/stream.log"},
	]
}

loki.process "file" {
	forward_to = [
		loki.write.main.receiver,
	]

	stage.match {
		selector = "{filename=\"/var/log/nginx/stream.log\"}"

		stage.logfmt {
			mapping = {
				msec = "",
			}
		}

		stage.timestamp {
			format = "Unix"
			source = "msec"
		}
	}
}

loki.relabel "journal" {
	forward_to = []

	rule {
		target_label = "unit"

		source_labels = [
			"__journal__systemd_unit",
		]
	}
}

loki.source.journal "main" {
	relabel_rules = loki.relabel.journal.rules

	forward_to = [
		loki.process.journal.receiver,
	]

	labels = {
		component = "loki.source.journal",
	}
}

loki.process "journal" {
	forward_to = [
		loki.write.main.receiver,
	]

	// stage.match {
	// 	selector = "{unit=\"unbound.service\"}"
	//
	// 	stage.regex {
	// 		expression = "(?:info|query|reply): (?P<client_address>\\S+?) (?P<query_name>\\S+?)\\. (?P<query_type>\\S+?) (?P<query_class>\\S+?)(:? (?P<rcode>\\S+?) (?P<time_to_resolve>\\S+?) (?P<cached>\\d) (?P<response_size>\\d+))?$"
	// 	}
	//
	// 	stage.labels {
	// 		values = {
	// 			cached         = "",
	// 			client_address = "",
	// 			query_class    = "",
	// 			query_name     = "",
	// 			query_type     = "",
	// 			rcode          = "",
	// 			response_size  = "",
	// 		}
	// 	}
	// }
}

loki.write "main" {
	external_labels = {
		hostname = "{{ ansible_hostname }}",
	}

	endpoint {
		url = "https://{{ hostvars.tombstone.external_fqdn }}:3100/loki/api/v1/push"
	}
}

prometheus.exporter.self "main" { }

prometheus.exporter.unix "main" {
	disable_collectors = [
		"bonding",
		"btrfs",
		"fibrechannel",
		"infiniband",
		"mdadm",
		"nfs",
		"nfsd",
		"runit",
		"tapestats",
		"xfs",
		"zfs",
	]
}

prometheus.scrape "main" {
	targets = array.concat(
		prometheus.exporter.self.main.targets,
		prometheus.exporter.unix.main.targets,
	)

	forward_to = [
		prometheus.remote_write.main.receiver,
	]
}

prometheus.remote_write "main" {
	external_labels = {
		hostname = "{{ ansible_hostname }}",
	}

	endpoint {
		url = "https://{{ hostvars.tombstone.external_fqdn }}:9090/api/v1/write"
	}
}

// vim: ft=river.jinja2
