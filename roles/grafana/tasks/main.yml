# yamllint disable rule:line-length
---
- name: set up repository key
  ansible.builtin.get_url:
    url: https://packages.grafana.com/gpg.key
    dest: /etc/apt/trusted.gpg.d/grafana.asc
    owner: root
    group: root
    mode: 0444

- name: set up repository
  ansible.builtin.apt_repository:
    repo: deb https://packages.grafana.com/oss/deb stable main
    filename: grafana
    mode: 0444

- name: install package
  ansible.builtin.apt:
    name: grafana
    install_recommends: false

- name: issue certificate
  ansible.builtin.import_tasks: certificate.yml

- name: create dashboard definitions directory
  ansible.builtin.file:
    name: /var/lib/grafana/dashboards
    owner: grafana
    group: grafana
    mode: 0755
    state: directory

- name: install dashboard definitions
  ansible.builtin.copy:
    src: dashboards/{{ grafana_item }}
    dest: /var/lib/grafana/dashboards/{{ grafana_item }}
    owner: root
    group: grafana
    mode: 0440
  loop:
    - nodes_rev1.json
    - unbound_rev1.json
  loop_control:
    loop_var: grafana_item
  notify: restart grafana-server

- name: install provisioning configuration
  ansible.builtin.template:
    src: "{{ grafana_item }}.j2"
    dest: /etc/grafana/provisioning/{{ grafana_item }}
    owner: root
    group: grafana
    mode: 0440
    validate: "{{ yamllint_validate_command }}"
  loop:
    - dashboards/default.yml
    - datasources/loki.yml
    - datasources/prometheus.yml
    - plugins/piechart.yml
  loop_control:
    loop_var: grafana_item
  notify: restart grafana-server

- name: install configuration
  ansible.builtin.template:
    src: grafana.ini.j2
    dest: /etc/grafana/grafana.ini
    owner: root
    group: grafana
    mode: 0440
  notify: restart grafana-server

- name: enable and start service
  ansible.builtin.systemd:
    name: grafana-server.service
    enabled: true
    state: started
